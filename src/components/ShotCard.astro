---
interface Props {
  shot: {
    imageUrl: string;
    title: string;
    views: number;
    likes: number;
    user: {
      name: string;
      avatarUrl: string;
      isPro: boolean;
    };
  };
}

const { shot } = Astro.props;

function formatNumber(num: number) {
  if (num >= 1000) {
    return (num / 1000).toFixed(1) + 'k';
  }
  return num.toString();
}
---

<article class="group relative">
  <div class="relative overflow-hidden rounded-lg bg-gray-100">
    <!-- Shot Image -->
    <img 
      src={shot.imageUrl} 
      alt={shot.title}
      class="w-full aspect-[4/3] object-cover"
      loading="lazy"
    />

    <!-- Hover Overlay -->
    <div class="absolute inset-0 bg-black/40 opacity-0 group-hover:opacity-100 transition-all duration-300">
      <!-- Action Buttons -->
      <div class="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 flex gap-3">
        <button class="w-12 h-12 rounded-full bg-white flex items-center justify-center hover:bg-gray-100 transition-colors">
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 21.35l-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z" fill="currentColor"/>
          </svg>
        </button>
        <button class="w-12 h-12 rounded-full bg-white flex items-center justify-center hover:bg-gray-100 transition-colors">
          <svg class="w-5 h-5" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M19 9h-4V3H9v6H5l7 7 7-7zM5 18v2h14v-2H5z" fill="currentColor"/>
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Shot Info -->
  <div class="flex items-center justify-between mt-3">
    <div class="flex items-center gap-2">
      <img 
        src={shot.user.avatarUrl} 
        alt={shot.user.name}
        class="w-8 h-8 rounded-full"
        loading="lazy"
      />
      <div class="flex flex-col">
        <p class="text-sm font-medium text-gray-900">{shot.title}</p>
        <div class="flex items-center gap-1">
          <span class="text-xs text-gray-600">{shot.user.name}</span>
          {shot.user.isPro && (
            <span class="text-[10px] bg-[#ea4c89] text-white px-1.5 py-0.5 rounded-full">PRO</span>
          )}
        </div>
      </div>
    </div>
    <div class="flex items-center gap-3 text-gray-600">
      <div class="flex items-center gap-1">
        <svg class="w-3.5 h-3.5" viewBox="0 0 16 16" fill="currentColor">
          <path d="M8 2.5C4.74998 2.5 2 5.25 2 8.5C2 11.75 4.74998 14.5 8 14.5C11.25 14.5 14 11.75 14 8.5C14 5.25 11.25 2.5 8 2.5ZM8 13C5.51472 13 3.5 10.9853 3.5 8.5C3.5 6.01472 5.51472 4 8 4C10.4853 4 12.5 6.01472 12.5 8.5C12.5 10.9853 10.4853 13 8 13Z"/>
          <path d="M8 5.5C7.17157 5.5 6.5 6.17157 6.5 7C6.5 7.82843 7.17157 8.5 8 8.5C8.82843 8.5 9.5 7.82843 9.5 7C9.5 6.17157 8.82843 5.5 8 5.5Z"/>
        </svg>
        <span class="text-xs">{formatNumber(shot.views)}</span>
      </div>
      <div class="flex items-center gap-1">
        <svg class="w-3.5 h-3.5" viewBox="0 0 16 16" fill="currentColor">
          <path d="M8 14.4C7.72 14.4 7.44 14.33 7.2 14.2C3.77 12.47 0 9.72 0 5.8C0 3.13 2.13 1 4.8 1C6.13 1 7.39 1.53 8.27 2.47C9.15 1.53 10.41 1 11.73 1C14.4 1 16.53 3.13 16.53 5.8C16.53 9.72 12.76 12.47 9.33 14.2C9.09 14.33 8.81 14.4 8.53 14.4H8Z"/>
        </svg>
        <span class="text-xs">{formatNumber(shot.likes)}</span>
      </div>
    </div>
  </div>
</article> 